[{"categories":["projects"],"content":"改编自数据科学爱好者 Nagesh 关于用 Python 编写神经网络的教程","date":"2022-01-18","objectID":"/zh-cn/ann_part1/","tags":["Python","ANN","神经网络"],"title":"从头开始写一个人工神经网络第一部分：感知器","uri":"/zh-cn/ann_part1/"},{"categories":["projects"],"content":"请查看代码！ 请查看 Github Gist =\u003e 要像我一样运行Colab，请访问这里🙂。 特别感谢 Nagesh 的教程非常简单易懂地解释了神经网络，点击查看教程系列的第一部分。 ","date":"2022-01-18","objectID":"/zh-cn/ann_part1/:1:0","tags":["Python","ANN","神经网络"],"title":"从头开始写一个人工神经网络第一部分：感知器","uri":"/zh-cn/ann_part1/"},{"categories":["projects"],"content":"关于梯度下降的解释 我很喜欢 Nagesh 关于梯度下降的解释，让我看到觉得醍醐灌顶。我很高兴在此复述，作为一次小小复习。 回想公式: $$ w=w-\\alpha（\\frac{\\partial F}{\\partial w}）$$ $\\frac{\\partial F}{\\partial w}$ 是损失 F 相对于参数 w 的梯度，简单地说，它可以理解为为损失随参数 w 的变化而变化的速率，在 2-D 下称之为斜率。如果损失随着参数 w 的增加而增加，$\\frac{\\partial F}{\\partial w}$ 将是一个正值，然后将其从 w 中减去相应值 $\\alpha (\\frac{\\partial F}{\\partial w})$，以沿梯度的相反方向前进。如果损失随着参数 w 的增加而减少，也同样适用:这意味着 $\\frac{\\partial F}{\\partial w}$ 是一个负值，我们实际上（减去一个负值）加了 $\\alpha (\\frac{\\partial F}{\\partial w})$ 到 w。，我们的目标是将 w 推向让 F，我们感兴趣最小化的损失函数，最快下降的方向。 ","date":"2022-01-18","objectID":"/zh-cn/ann_part1/:2:0","tags":["Python","ANN","神经网络"],"title":"从头开始写一个人工神经网络第一部分：感知器","uri":"/zh-cn/ann_part1/"},{"categories":["projects"],"content":"2020年夏季EconEx实习, 通过Python编程的独立项目","date":"2020-08-09","objectID":"/zh-cn/covid19_analysis/","tags":["Python","数据分析"],"title":"Covid-19下的纽约：消费者和零售趋势分析","uri":"/zh-cn/covid19_analysis/"},{"categories":["projects"],"content":"1. 我做了什么 在 2020 年的夏天，我有幸被选入了由 ECON 部门主办的 ECONEX Externship 项目。在威斯康辛大学校友和数据科学家 Micah Lanier 的指导下，我完成了一个独立项目，分析新冠疫情下纽约市的消费和零售趋势。同时，我在 Python 中自学了许多有用的数据分析技术，比如如何使用 Numpy、Pandas、Matplotlib…插值来填充丢失的数据和网络爬虫。 ","date":"2020-08-09","objectID":"/zh-cn/covid19_analysis/:1:0","tags":["Python","数据分析"],"title":"Covid-19下的纽约：消费者和零售趋势分析","uri":"/zh-cn/covid19_analysis/"},{"categories":["projects"],"content":"2. 最终结果 对于最终的可交付成果，这里是 whitepaper，我还做了一个视频演示: 这是完整的代码:（我在这里附上了它，但它们也可以在 github repo 上找到） Main.py: import pandas as pd import numpy as np from datetime import datetime import matplotlib.pyplot as plt %matplotlib inline df = pd.read_csv(\"us-counties.csv\",parse_dates=True,index_col=0) pd.options.display.max_rows = 10 df = df['20200304':'20200611'] df.reset_index(inplace=True) df t10 = df.groupby('state').sum().sort_values('cases', ascending=False).head(10) t10 = t10.drop(columns='fips') print (t10.index) t10_list = ['New York', 'New Jersey', 'Illinois', 'California', 'Massachusetts', 'Pennsylvania', 'Michigan', 'Texas', 'Florida', 'Louisiana'] t10 t_c = t10['cases'].to_list() t_d = t10['deaths'].to_list() x = np.arange(len(t10.index)) # the label locations width = 0.35 # the width of the bars fig, ax = plt.subplots(figsize=(12,5)) rects1 = ax.bar(x - width/2, t_c, width, label='cases') rects2 = ax.bar(x + width/2, t_d, width, label='deaths') # Add some text for labels, title and custom x-axis tick labels, etc. ax.set_ylabel('number') ax.set_title('Cases and deaths comparison across top 10 states') ax.set_xticks(x) ax.set_xticklabels(t10.index) #ax.set_yticks(y) #ax.set_yticklabels(y) ax.legend() fig.tight_layout() plt.show() # now I have obtained the top 10 states with cases confirmed. Next I want to plot the contrast between # cases and deaths over time for each state. cov19_counties_bystate_cases = pd.Series(df.groupby(['state','date']).cases.sum()) cov19_counties_bystate_deaths = pd.Series(df.groupby(['state','date']).deaths.sum()) cov19_counties_bystate = pd.DataFrame(cov19_counties_bystate_cases) cov19_counties_bystate['deaths'] = cov19_counties_bystate_deaths cov19_counties_bystate_deaths = pd.Series(cov19_counties.groupby(['state','date']).deaths.sum()) cov19_counties_bystate = pd.DataFrame(cov19_counties_bystate_cases) cov19_counties_bystate['deaths'] = cov19_counties_bystate_deaths cov19_counties_bystate from matplotlib.dates import DateFormatter import matplotlib.dates as mdates cov19_counties.date = pd.to_datetime(cov19_counties.date) pp.figure(figsize=(12,12)) for i, state in enumerate(t10.index): pp.subplot(5,2,i+1) #5 rows, 2 columns pp.plot(cov19_counties_bystate.loc[state].cases,label='cases') pp.plot(cov19_counties_bystate.loc[state].deaths,label='deaths') pp.legend() pp.title(state) #pp.xticks(arange(4), calendar.month_name[3:6+1], rotation=45) pp.tight_layout() # drop rows df = cov19_counties_bystate ax = cov19_counties_bystate.loc['New York'].cases.plot.line(figsize=(12,5)) ax = cov19_counties_bystate.loc['New Jersey'].cases.plot.line(figsize=(12,5)) ax = cov19_counties_bystate.loc['Illinois'].cases.plot.line(figsize=(12,5)) #ax = cov19_counties_bystate.loc['California'].cases.plot.line(figsize=(12,5))''' for state in t10.index[:4+1]: ax = cov19_counties_bystate.loc[state].cases.plot.line(figsize=(12,5)) ax.legend(t10.index[:4+1]) pp.title('states cases') for state in t10.index[:4+1]: ax = cov19_counties_bystate.loc[state].deaths.plot.line(figsize=(12,5)) ax.legend(t10.index[:4+1]) pp.title('states deaths') df[df.state == 'New York'] dfc = df[df.state == 'New York'].pivot_table(index = df[df.state == 'New York'].date, values='cases',aggfunc='sum') dfd = df[df.state == 'New York'].pivot_table(index = df[df.state == 'New York'].date, values='deaths',aggfunc='sum') ax = dfc.plot.line(figsize=(12,5),grid=True,rot=True) dfd.plot.line(figsize=(12,5),grid=True,rot=True,ax=ax) ax.set_xlabel(\"New York\") ax.set_ylabel(\"number\") def plotstate(state_name): dfc = df[df.state == state_name].pivot_table(index = df[df.state == state_name].date, values='cases',aggfunc='sum') dfd = df[df.state == state_name].pivot_table(index = df[df.state == state_name].date, values='deaths',aggfunc='sum') ax = dfc.plot.line(figsize=(12,5),grid=True,rot=True) dfd.plot.line(figsize=(12,5),grid=True,rot=True,ax=ax) ax.set_xlabel(state_name) ax.set_ylabel(\"number\") plotstate('New York') for i, state in enumerate(t10.index): plotstate(state) # the","date":"2020-08-09","objectID":"/zh-cn/covid19_analysis/:2:0","tags":["Python","数据分析"],"title":"Covid-19下的纽约：消费者和零售趋势分析","uri":"/zh-cn/covid19_analysis/"},{"categories":["projects"],"content":"我在 UW-Madison Data Science Club 主办的 Data Challenge 中的项目概述","date":"2020-11-05","objectID":"/zh-cn/data_challenge_2020/","tags":["机器学习","统计","数据分析","Python"],"title":"心力衰竭死亡预测项目-Data Challenge 2020","uri":"/zh-cn/data_challenge_2020/"},{"categories":["projects"],"content":"1.我做了什么 在 2020 年初秋，我与威斯康辛大学麦迪逊分校的Isye专业学生Shaonan Wang合作，参加了由数据科学俱乐部主办的数据挑战赛。任务是对给出的数据集进行预处理，并开发出可能的最佳预测 Statiscal/ML 模型（“最佳”表示最高准确度） 该数据集来自 Kaggle.com，它是基于近 300 名患者（糖尿病、高血压等）的 12 种健康特征，预测心力衰竭导致的死亡。采用 Logistic 回归和随机森林相结合的方法，最终得到了 87% 的随机森林.在模型评价中，我们使用了混淆矩阵和 ROC 曲线。最后，我们做了一个 analysis report，并向教授和其他团队展示了我们的成果。 ","date":"2020-11-05","objectID":"/zh-cn/data_challenge_2020/:1:0","tags":["机器学习","统计","数据分析","Python"],"title":"心力衰竭死亡预测项目-Data Challenge 2020","uri":"/zh-cn/data_challenge_2020/"},{"categories":["projects"],"content":"2.最终结果 deliverables 👉 colab代码 👉 analysis report 幻灯片 ","date":"2020-11-05","objectID":"/zh-cn/data_challenge_2020/:2:0","tags":["机器学习","统计","数据分析","Python"],"title":"心力衰竭死亡预测项目-Data Challenge 2020","uri":"/zh-cn/data_challenge_2020/"},{"categories":["博客"],"content":"使用 Google Colab 和 gspread（用于 Google 表格的 Python API）来更新我的番茄追踪器","date":"2022-01-14","objectID":"/zh-cn/pomodoro/","tags":["“番茄钟”","“Python”","“gspread”","“Colab”","“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["博客"],"content":"在上个学期的时间管理中，我偶然发现了 Francesco Cirillo 开发的 番茄技术。虽然这是我很久以前就听说过的事情，但我还是决定试一试。这一次，我用谷歌工作表作为我的番茄追踪器。 我已经将跟踪器分为 3 个工作表，它们是（1）今天的待办事项，（2）每日日志，和（3）待办事项（见下图）。我会用待办事项来记录我的总体目标，不管是短期目标还是长期目标。然后，在每天开始的时候，我会选择一些我想要关注的任务，并将它们放在今天的待办事项中，在每天结束的时候，我会手动输入今天完成的任务，并将它们组织到每日日志中，这是一张详细的表格，记录了我每天完成任务的内容。 Today's To-Do\u003cimg src=\"Daily-To-Do.png\" width=\"250\"/\u003e \" Today's To-Do Daily Log\u003cimg src=\"Daily-log.png\" width=\"250\"/\u003e \" Daily Log To-Dos\u003cimg src=\"To-Dos.png\" width=\"250\"/\u003e \" To-Dos 在将今天的待办事项中的信息手动转移到日常日志中一段时间后，我厌倦了繁琐的“复制和粘贴”过程。考虑到这可能是一个学习一些新技能的好机会，我使用相对简单的 gspread API 查找了如何阅读和编写谷歌工作表，结果只需运行一个简短的代码就可以节省很多时间。 ","date":"2022-01-14","objectID":"/zh-cn/pomodoro/:0:0","tags":["“番茄钟”","“Python”","“gspread”","“Colab”","“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["博客"],"content":"演示文件（跟上！） 如果你想获得亲身体验，你可以使用演示文件与我一起编码。欢迎你进行调整和改进，以使自己适合自己。 填充 log.ipynb:python 代码 番茄技术 Google Sheets ","date":"2022-01-14","objectID":"/zh-cn/pomodoro/:1:0","tags":["“番茄钟”","“Python”","“gspread”","“Colab”","“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["博客"],"content":"1. 导入 import pandas as pd from google.colab import auth import gspread from oauth2client.client import GoogleCredentials from datetime import date, datetime import pytz import os import json ","date":"2022-01-14","objectID":"/zh-cn/pomodoro/:2:0","tags":["“番茄钟”","“Python”","“gspread”","“Colab”","“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["博客"],"content":"2. 认证和授权 auth.authenticate_user() gc = gspread.authorize(GoogleCredentials.get_application_default()) 第一步是使 Google Sheets API 能够访问你的电子表格。\" 身份验证和授权机制分别用于验证身份和对资源的访问。“你可以了解有关身份验证和授权 here 的更多信息。 但实际上，一旦你运行了这两行代码，一个 URL 就会弹出，并在浏览器中打开一个新的选项卡，该选项卡要求你授予访问权限。之后，复制 URL 并将其粘贴到“验证”框中。 ","date":"2022-01-14","objectID":"/zh-cn/pomodoro/:3:0","tags":["“番茄钟”","“Python”","“gspread”","“Colab”","“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["博客"],"content":"3. 找到你的表单 url = \"https://docs.google.com/spreadsheets/d/1oogWtA5vSlcZTYzYL1CDrv4FIytao2MBBq6UmCKHLK4/edit#gid=0\" wb = gc.open_by_url(url) todosheet = wb.worksheet(\"Today's To-Do\") logsheet = wb.worksheet(\"Daily Log\") 接下来，我们准备好打开我们的电子表格。请记住上面的 gc 变量，它存储了一个你实际上不需要知道的 Client_Class 实例。gc.open_by_url 通过 URL 打开电子表格并返回电子表格实例 wb。通过更改 wb.worksheet(???) 的名称参数，我们可以检索相应的工作表。 ","date":"2022-01-14","objectID":"/zh-cn/pomodoro/:4:0","tags":["“番茄钟”","“Python”","“gspread”","“Colab”","“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["博客"],"content":"4. 操作检索到的工作表数据 在我的例子中，因为我想将单元格数据读入列表（表示行）并将其写到新的工作表中，所以我以我认为合适的方式对其进行了操作。返回的 newList 将用于填充“每日日志”工作表。 data = todosheet.get_all_values() df_todo = pd.DataFrame(data) df_todo.columns = df_todo.iloc[0] df_todo = df_todo.drop(0) df_todo = df_todo.reset_index(drop=True) header = df_todo.columns.tolist() rowsList = df_todo.to_numpy().tolist() ''' return a list of lists to populate the log sheet will only add tasks that have already been done ''' def createPopulateData(rowsList): newList = [] for row in rowsList: rowList = [] task = row[header.index('task')] status = row[header.index('status')] if task == \"\" or status == \"\": break start_time = row[header.index('start time')] stepType = row[header.index('step/type')] pomos = row[header.index('pomodoro(s)')] pomoNum, intDistract, extDistract = 0, 0, 0 for sign in pomos: if sign == \"x\": pomoNum += 1 elif sign == \"-\": extDistract += 1 elif sign == \"'\": intDistract += 1 else: continue if pomoNum == 0: continue tz = pytz.timezone(\"US/Central\") todayDate = datetime.now(tz).strftime(\"%m/%d/%y\") # assumes the author runs the script before local 11:59 pm notes = row[header.index('notes')] rowList.extend([todayDate, start_time, stepType, task, pomoNum, intDistract, extDistract, notes]) newList.append(rowList) return newList newList = createPopulateData(rowsList) ","date":"2022-01-14","objectID":"/zh-cn/pomodoro/:5:0","tags":["“番茄钟”","“Python”","“gspread”","“Colab”","“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["博客"],"content":"5. 简化更新流程 如果我希望重写，因为我已经对我的“今天的工作”表做了一些其他的修改，该怎么办？因为默认情况下 sheet.append_rows（） 函数追加到表的最后一行之后，而我不希望这样，所以在最初运行代码时，我创建了一个 marks.json 文件，该文件记录了范围的起始索引，以及这是否是一个更新操作。如果这是一个更新操作（除了第一次运行代码，其余都被认为是更新），我将切换到使用 sheet.update（），因为它将更新并反映我对 Sheet 所做的新更改。 path = \"/content/marks.json\" if not os.path.exists(path): start = len(logsheet.col_values(1)) + 1 marks = {} marks[\"start\"] = start marks[\"update\"] = False with open(path, \"w\") as f: json.dump(marks, f) else: with open(path) as f1: marks = json.load(f1) marks[\"update\"] = True with open(path, \"w\") as f2: json.dump(marks, f2) with open(path) as f: marks = json.load(f) start, update = marks[\"start\"], marks[\"update\"] ''' do not delete Today's To-Do sheet until satisfied with Daily log editing because starting index of rows range to append is fixed ''' append = len(newList) - 1 end = marks[\"start\"] + append if not update: print(f\"append {len(newList)} rows to Daily Log\") res = logsheet.append_rows(newList, table_range=f\"A{start}:H{end}\") else: print(f\"update {len(newList)} rows to Daily Log\") res = logsheet.update(f\"A{start}:H{end}\", newList) if len(newList) == 0: print(\"no finished task to append or update yet :)\") res 最后，res 对象包括一个自动响应，该响应告诉我们已经添加或更新了什么，以确认我们是否做了正确的事情。 ","date":"2022-01-14","objectID":"/zh-cn/pomodoro/:6:0","tags":["“番茄钟”","“Python”","“gspread”","“Colab”","“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["博客"],"content":"花一些时间来更新我对“p-value”的理解, 并在此处做个笔记","date":"2020-09-01","objectID":"/zh-cn/stats_pvalue/","tags":["p值","统计","假设检验"],"title":"对假设检验中p值的反思","uri":"/zh-cn/stats_pvalue/"},{"categories":["博客"],"content":"我觉得这个主题非常重要，值得深入探讨，因为我这学期的 4 门课程中有 3 门已经涵盖了这个概念。然而，在我的 AP 课程和大学入门统计课程中，我很早就学会了 P 值和假设检验，这始终有点模糊。因此，为学习巩固和将来的参考复习将是很好的。 ","date":"2020-09-01","objectID":"/zh-cn/stats_pvalue/:0:0","tags":["p值","统计","假设检验"],"title":"对假设检验中p值的反思","uri":"/zh-cn/stats_pvalue/"},{"categories":["博客"],"content":"1. 拒绝检验假设Ho实际上意味着什么？ 拒绝检验假设 $H_{0}$ 并不意味着它是真的，它只是意味着我们无法证明它是假的。检验假设 $H_{0}$ 和 备择假设 $H_{1}$ 不是对立面。这不是非黑即白。假设检验假设 $H_{0}$ 为真，则发生了一个低概率事件.这种情况似乎很少发生，但如果确实发生了，那么有理由怀疑检验假设 $H_{0}$ 的有效性。 ","date":"2020-09-01","objectID":"/zh-cn/stats_pvalue/:1:0","tags":["p值","统计","假设检验"],"title":"对假设检验中p值的反思","uri":"/zh-cn/stats_pvalue/"},{"categories":["博客"],"content":"2. 假设检验 根据伍尔德里奇的教科书:有两种方法。 经典的:比较临界值和测试统计量，如果测试统计量 \u003e 临界值，然后拒绝，因为我们得到了一个足够大的值相比空。 note 随着 $\\alpha$ 显著性水平的降低，临界值增加，这意味着更难拒绝检验假设 $H_{0}$ ，并且需要更大的测试统计量来拒绝。例如，如果我可以拒绝 5% 显著性水平的空，那么我肯定可以拒绝 10% 的空。 P 值:计算 P 值并将其与 Sigficance 级别进行比较，如果 P 值 \u003c 显著性级别，则拒绝检验假设 $H_{0}$ ，反之亦然。 ","date":"2020-09-01","objectID":"/zh-cn/stats_pvalue/:2:0","tags":["p值","统计","假设检验"],"title":"对假设检验中p值的反思","uri":"/zh-cn/stats_pvalue/"},{"categories":["博客"],"content":"3. 额外的想法 给定 t 统计量的观测值，p 值是否定零假设的最小显著性水平（alpha）。–引自伍尔德里奇 用我自己的理解来说，如果 p 值是 0.03，这意味着当检验假设 $H_{0}$ 为真时，我们将观察到测试统计为极端 3% 的时间。较小的 p 表示反对 $H_{0}$ 的证据较强。要将它与 $\\alpha$ 进行比较，符号度水平是为了确保如果我们在 3% 的时间内拒绝 $H_{0}$ ，它应该在误差容限内（显著性水平），例如，如果 $\\alpha$ 是 0.05，我们愿意接受错误地拒绝 5% 的零时间，当它实际上是真的。为什么说 P 值是最小的显著性水平？如果我们计算 p 为 0.03，并且我们可以在 3% 的显著性水平上拒绝 $H_{0}$ ，那么如果问题设置为 5%，我们当然可以拒绝它。 ","date":"2020-09-01","objectID":"/zh-cn/stats_pvalue/:3:0","tags":["p值","统计","假设检验"],"title":"对假设检验中p值的反思","uri":"/zh-cn/stats_pvalue/"},{"categories":["项目"],"content":"从 Google Apps 脚本构建自定义函数以格式化我的数据输入表单和 从数据中提取有用信息","date":"2022-03-14","objectID":"/zh-cn/gs_transaction_format/","tags":["谷歌App脚本","谷歌表格","电子表格","数据分析"],"title":"使用 Google Apps 脚本简化我的交易记录","uri":"/zh-cn/gs_transaction_format/"},{"categories":["项目"],"content":" 借钱几乎每秒都在发生，尤其是在朋友之间。今天我想谈谈如何促进我们的还款过程，以便可以完成最少的交易。具体来说，这是我创建的一个 google sheet demo，用于模拟 6 个朋友之间的借贷。 原始交易表\u003cimg src=\"raw_transaction.png\" width=\"250\"/\u003e \" 原始交易表 我想到的第一件事是格式可能有一些额外的工作。第二件事是，我们是否可以自动提取“欠款”矩阵，让每个人都知道他们需要偿还给对方多少钱？它特别让我烦恼，我需要来回点击按钮重新格式化，而自动化最好在编程工具的帮助下完成。这就是我想到 Google Apps 脚本的时候！它可以帮助构建完美融入 Google 电子表格的 Web 应用程序并简化我们的生活。 最终的格式化产品如下所示： 格式化交易单\u003cimg src=\"formatted_transaction.png\" width=\"250\"/\u003e \" 格式化交易单 “欠款”或“债务”矩阵如下所示： 债务矩阵\u003cimg src=\"debt_matrix.png\" width=\"250\"/\u003e \" 债务矩阵 您可以清楚地看到，现在安迪还需要向莎拉偿还 6.03 美元！虽然安迪曾经借给莎拉 7.83 美元，但后来莎拉又借给安迪 13.86 美元。与莎拉向安迪返还 7.83 美元和安迪向莎拉返还 13.86 美元的两笔交易不同，只有一笔交易可以完成这项工作！ 这只是一个小演示。应用程序肯定需要更多优化。敬请关注！ ","date":"2022-03-14","objectID":"/zh-cn/gs_transaction_format/:0:0","tags":["谷歌App脚本","谷歌表格","电子表格","数据分析"],"title":"使用 Google Apps 脚本简化我的交易记录","uri":"/zh-cn/gs_transaction_format/"},{"categories":["项目"],"content":"演示文件 如果您想获得动手体验，可以试用演示文件。欢迎您适应和改进，以使自己适合自己。在电子表格Copy of transaction app下有三张表，分别称为transaction、personal info和debt matrix。您可以忽略“个人信息”，我最初打算制作一个自动电子邮件应用程序来提醒债务人。 （将来会做！） 交易应用程序副本 ","date":"2022-03-14","objectID":"/zh-cn/gs_transaction_format/:1:0","tags":["谷歌App脚本","谷歌表格","电子表格","数据分析"],"title":"使用 Google Apps 脚本简化我的交易记录","uri":"/zh-cn/gs_transaction_format/"},{"categories":["项目"],"content":"1. 资源和参考！ 我提到了一些我发现特别有用的资源： Google Apps 脚本初学者教程 （我的格式功能绝对是指这个！特别感谢您的启发。） Google Apps 脚本文档：电子表格 stackoverflow（推荐！） ","date":"2022-03-14","objectID":"/zh-cn/gs_transaction_format/:2:0","tags":["谷歌App脚本","谷歌表格","电子表格","数据分析"],"title":"使用 Google Apps 脚本简化我的交易记录","uri":"/zh-cn/gs_transaction_format/"},{"categories":["项目"],"content":"2. 说明 下拉函数\u003cimg src=\"show_dropdown.png\" width=\"250\"/\u003e \" 下拉函数 如果您单击顶部菜单栏中的“自定义功能”，您将看到这四个功能。 Format Sheet 是你可以应用到三张表中的任何一张。它将对除“债务矩阵”之外的所有内容应用相同的格式，该矩阵需要对其左侧和顶部进行不同的处理。 清除一切是清除格式和内容，所以基本上刷掉一切。 Clear Format，顾名思义，只清除格式，保留内容。 Fill Table 旨在应用于最后一张表：debt matrix。每次运行时它都会更新整个表以匹配“事务”表中的数据。 要达到上述债务矩阵的预期效果，您需要先运行Fill Table，然后运行Format Sheet。 此外，在您第一次应用任何功能时，脚本会请求访问您的个人帐户的权限。许可后，你就可以开始用了！ ","date":"2022-03-14","objectID":"/zh-cn/gs_transaction_format/:3:0","tags":["谷歌App脚本","谷歌表格","电子表格","数据分析"],"title":"使用 Google Apps 脚本简化我的交易记录","uri":"/zh-cn/gs_transaction_format/"},{"categories":["博客"],"content":"一个博客, 分享我自己构建 Hugo 网站的一些经验","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["博客"],"content":"1. 前提 安装 git 安装 hugo ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:1:0","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["博客"],"content":"2. 开始 我建议查看官方文档，了解基本的安装和配置。如果到那时你还不能解决问题，那就看看那些可能会有帮助的博客文章。 ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:2:0","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["博客"],"content":"官方文档 https://hugoloveit.com/（网站小样） https://gohugo.io/getting-started/quick-start/ https://hugoloveit.com/（这是 Hugo 中的 loveit 主题，但是格式和debug应该能应用到其他模板） YouTube 一步一步的教程 ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:2:1","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["博客"],"content":"博客 有没有地方我们可以在 blogdown 中放置非博客文件（pdf 文件）？ 如何用Hugo一起创建多语言网站 ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:2:2","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["博客"],"content":"杂项 font_awesome。Docset（图标） Common Issues 如果你的页面在开发模式下崩溃，请耐心等待，也许可以用 Ctrl-C 和 hugo server -D 在终端中重新加载服务器。 要注意语法、格式，特别是在使用多语言设置时。 如果你不确定组织结构，请在复制每个 Hugo Repo 文件夹后，始终首先引用 themes/xxx/examplesite 文件夹。 当你想要在主页中为内容预览添加图像时，请执行以下操作: resources: - name: \"featured-image\" src: \"featured-image.png\" 并将你的 MD 文件命名为 index.md。如果你想告诉 Hugo 在预览中只在分隔符之前总结内容，请不要忘记添加 \u003c!--more--\u003e 分隔符。 ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:2:3","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["博客"],"content":"3. 发布你的网站 出版这一页对我来说有点麻烦。在这次体验之后，我真诚的建议是找一个教程，并严格按照步骤进行。即使你不喜欢这个主题或教程风格，但首先建立你的理解并在此基础上进行升级/优化总是比较容易的。 我使用 Github 来托管我的网站，下面是我引用的文档/博客列表: https://hongtaoh.com/en/2021/04/05/hugo-deploy-github-actions/ https://gohugo.io/hosting-and-deployment/hosting-on-github/ https://levelup.gitconnected.com/build-a-personal-website-with-github-pages-and-hugo-6c68592204c7 https://www.pluralsight.com/guides/how-to-host-your-static-webpages-on-github-pages ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:3:0","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["博客"],"content":"4. 其他细节 ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:4:0","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["博客"],"content":"评论 为了设置 Utterances 评论部分，我更新了 config.toml 并将 Utterances 应用程序安装到 repo。还有其他 alternatives 类似的 disqus 和 valine。 ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:4:1","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["博客"],"content":"GDOCS 简码 感谢 Ashish Tiwari 的 Shortcodes post 和 Wowchemy-Hugo-Modules ，我能够加入 GDOCS 的 Shortcodes 功能。特别是，要注意你的简码。 {{\u003cgdocs src=\"???\"\u003e}} ，srcURL 应该是发布到 Web 的 URL（在你的 Google 幻灯片中，转到文件，然后发布到 Web，选择链接或嵌入并复制 src=\"？？？”），而不是共享的 URL。我纠正了这一点，因为我发现只有我的笔记本电脑网络可以显示 GDOCS（而且显示内容不是很令人满意），而 iPad 和 iPhone 不能。特别感谢 Cecina Babich Morrow 的帖子。 ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:4:2","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["博客"],"content":"我在远程机器上将 Matlab 配置到 Jupyter Notebook 的经验分享","date":"2022-01-30","objectID":"/zh-cn/matlab_jupyter/","tags":["Matlab","Jupyter Notebook","Python","设置","安装"],"title":"在 Jupyter Notebook 里使用 Matlab 教程","uri":"/zh-cn/matlab_jupyter/"},{"categories":["博客"],"content":"我开始使用 Jupyter Notebook 仅用于在 Python 中进行编码。然而，随着我逐渐学会了更多的编程语言，我希望我可以在一个环境中拥有所有的语言，然后我就不需要打开多个程序了。幸运的是，我被告知我可以轻松地将这些语言配置到笔记本中（尽管对我来说不是一个简单的过程，/（o）/~~），并且由于我将在本学期同时学习 Matlab 和 Julia，这将是一个尝试它的好机会。 对于那些想要继续阅读的人的注意事项，这个博客 (1) 不包括如何在您自己或远程计算机上安装 Matlab (2) 主要用于在远程位置安装 MATLAB Engine API for Python（您不需要 ‘没有写权限，换句话说，不是超级用户）和故障排除，因为我不想在我自己的笔记本电脑上安装 Matlab，但仍然想享受这些好处。 不过，该过程可以适应并推广到其他情况，我确实在下面列出了适合各种需求的参考资料。 ","date":"2022-01-30","objectID":"/zh-cn/matlab_jupyter/:0:0","tags":["Matlab","Jupyter Notebook","Python","设置","安装"],"title":"在 Jupyter Notebook 里使用 Matlab 教程","uri":"/zh-cn/matlab_jupyter/"},{"categories":["博客"],"content":"0. 参考文献 我鼓励你先自己试一试。以下是我在流程中提到的一些资源（包括故障排除）： References List Jupyter 笔记本电脑的 MATLAB 内核教程 在非默认位置为 Python 安装 MATLAB 引擎 API 安装 Jupyter-Matlab 如何使用 Python 的 Anaconda 包管理器正确安装 MATLAB 引擎？ packagesnotfounderror:以下软件包不能从当前渠道获得： 当尝试使用 ipyWidgets 时 404 错误且没有此通信目标 大多数教程都假设编码人员已经具有相对较高的理解水平。 对于像我这样的新手，我会很感激更详细的解释。 这也是我立即写这篇博客的原因，供我自己参考，也供那些正在努力解决问题的人参考。 ","date":"2022-01-30","objectID":"/zh-cn/matlab_jupyter/:1:0","tags":["Matlab","Jupyter Notebook","Python","设置","安装"],"title":"在 Jupyter Notebook 里使用 Matlab 教程","uri":"/zh-cn/matlab_jupyter/"},{"categories":["博客"],"content":"1. 使用 Conda 创建 Myenv 对于这类任务，我建议始终创建一个虚拟环境。然后，你可以对任何设置和包进行个性化设置，以防任务与安装在基础中的包不一致，或者你不想搞砸它。前提条件是，你应该通过 微型或水蟒 安装 conda。我非常后悔一开始没有这样做，因为在一步之后，我发现由于某些原因 Python3.8 不能很好地工作；所以当我创建 Myenv Susu 时，我最终切换到了 Python3.7: conda create -n susu python=3.7 有关 Conda Create Env 的更多相关内容，请查看链接 here 的文档。 ","date":"2022-01-30","objectID":"/zh-cn/matlab_jupyter/:2:0","tags":["Matlab","Jupyter Notebook","Python","设置","安装"],"title":"在 Jupyter Notebook 里使用 Matlab 教程","uri":"/zh-cn/matlab_jupyter/"},{"categories":["博客"],"content":"2. 找到你的 MATLAB 文件夹 matlabroot 理想情况下，打开已安装的 Matlab 应用程序并运行 matlabroot 就可以找到 matlabroot。你将看到类似 ans = \"???/???/matlab-2021b\" 的路径。但是，当远程计算机不在你身边时，你该怎么办？然后，你可以 SSH 到那台机器上，在终端上处理这个问题，这往往是很慢的。通过在 Terminal 中打开 Matlab，输入 Matlab-nodesktop-nodisplay，可以加快速度（虽然我感觉不是很快）。它的开头是说 MATLAB is selecting SOFTWARE OPENGL rendering. 这是个好兆头，你只需等待几分钟。一旦 \u003e\u003e 符号弹出，运行 matlabroot。 ","date":"2022-01-30","objectID":"/zh-cn/matlab_jupyter/:3:0","tags":["Matlab","Jupyter Notebook","Python","设置","安装"],"title":"在 Jupyter Notebook 里使用 Matlab 教程","uri":"/zh-cn/matlab_jupyter/"},{"categories":["博客"],"content":"3. 在非默认文件夹中构建或安装 基本上，如果你没有对默认的 Matlab 文件夹和默认的 Python 文件夹的写权限（如果你对此感到困惑，请查找 默认值与非默认值文件夹），因为我正在访问远程计算机，请按以下方式执行： cd \"matlabroot\\extern\\engines\\python\" python setup.py build --build-base=\"builddir\" install --prefix=\"installdir\" 请注意，builddir 将是你在 Matlab 文件夹下创建的非默认文件夹的路径（当你初始化 Matlab 程序时，默认文件夹将自动创建）。installdir 也是。它是 Python 包的搜索路径中非默认文件夹的路径。我直接在 myenv susu 下创建它–???/yumian/Documents/miniconda/envs/susu\" ","date":"2022-01-30","objectID":"/zh-cn/matlab_jupyter/:4:0","tags":["Matlab","Jupyter Notebook","Python","设置","安装"],"title":"在 Jupyter Notebook 里使用 Matlab 教程","uri":"/zh-cn/matlab_jupyter/"},{"categories":["博客"],"content":"4. 为 Jupyter 安装 Matlab 内核 pip/conda install matlab_kernal python -m matlab_kernel install 技巧 我建议使用 conda 而不是 pip。只是我的经验，因为 pip 一开始会给我带来一些问题。 运行 conda install matlab_kernal 时，如果遇到： PackagesNotFoundError: The following packages are not available from current channels: - matlab_kernel 尝试 conda install -c conda-forge matlab_kernel 当运行 python -m matlab_kernel install 时，如果它表示已定义权限，请按照它的建议执行，在末尾添加 --user。 完成这一步后，你就可以启动 Jupyter 笔记本了，可以选择 Matlab。 在此之前，打开 Python 并运行 import matlab.engine 以验证你是否正确安装了此模块。你可以做的另一件事是 pip list | grep matlab，它应该列出以下内容： matlab-kernel 0.16.11 matlabengineforpython R2021b 如果在尝试运行单元格时，后台一直报告 Matlab engine not installed: 错误，请返回检查已安装的目录；可能是你没有正确安装它。如果背景显示 HTTP 404: Not Found (Kernel does not exist: 错误，请尝试下面的技巧（c.r.@tensionhead）： jupyter nbextension install --py widgetsnbextension --user jupyter nbextension enable --py widgetsnbextension 编程愉快！我将有另一个关于配置 Julia 的博客，它比这个简单得多。(更新: 请看关于配置 Julia 博客!) ","date":"2022-01-30","objectID":"/zh-cn/matlab_jupyter/:5:0","tags":["Matlab","Jupyter Notebook","Python","设置","安装"],"title":"在 Jupyter Notebook 里使用 Matlab 教程","uri":"/zh-cn/matlab_jupyter/"},{"categories":["博客"],"content":"我在远程机器上将 Julia 配置为 Jupyter Notebook 的经验","date":"2022-01-30","objectID":"/zh-cn/julia_jupyter/","tags":["Julia","Jupyter Notebook","Python","设置","安装"],"title":"将 Julia 配置到 Jupyter Notebook 中","uri":"/zh-cn/julia_jupyter/"},{"categories":["博客"],"content":"这个博客是在我的 将 Matlab 配置到 Jupyter Notebook 中 博客之后不久写的。如果你想看那个，你可以点击 here。这个更容易安装，所以让我们立即开始！ ","date":"2022-01-30","objectID":"/zh-cn/julia_jupyter/:0:0","tags":["Julia","Jupyter Notebook","Python","设置","安装"],"title":"将 Julia 配置到 Jupyter Notebook 中","uri":"/zh-cn/julia_jupyter/"},{"categories":["博客"],"content":"0. 参考文献 类似地，我在这里发布了参考资料文章，以备你自己尝试使用。 References List 官方二进制文件的平台特定说明 如何将 Julia 添加到 Jupyter Notebook ","date":"2022-01-30","objectID":"/zh-cn/julia_jupyter/:1:0","tags":["Julia","Jupyter Notebook","Python","设置","安装"],"title":"将 Julia 配置到 Jupyter Notebook 中","uri":"/zh-cn/julia_jupyter/"},{"categories":["博客"],"content":"1. 下载 Julia 这台远程电脑没有安装 Julia。请查看列表中的第一个文档，以找到针对你的计算机类型定制的说明–Windows、MaxOS 或 Linux。我在 Linux 上，所以我跳到了 Linux 和 FreeBSD 部分。 wget https://julialang-s3.julialang.org/bin/linux/x64/1.7/julia-1.7.1-linux-x86_64.tar.gz tar zxvf julia-1.7.1-linux-x86_64.tar.gz 记住将 Julia 的 bin 文件夹添加到 PATH 环境变量，这样你就可以在任何地方执行 Julia。否则，每次都需要执行 \u003cJulia directory\u003e/bin/julia。 vim ~/.bashrc export PATH=\"$PATH:/path/to/\u003cJulia directory\u003e/bin\" / export PATH=\"/path/to/\u003cJulia directory\u003e/bin:$PATH\" source ~/.bashrc # Don't forget! 启动一个新的终端，并尝试进入一个不是 Julia 的 bin 的文件夹，输入 julia，它应该可以正常工作。你将看到 julia\u003e 命令行。 ","date":"2022-01-30","objectID":"/zh-cn/julia_jupyter/:2:0","tags":["Julia","Jupyter Notebook","Python","设置","安装"],"title":"将 Julia 配置到 Jupyter Notebook 中","uri":"/zh-cn/julia_jupyter/"},{"categories":["博客"],"content":"2. 将 Julia 添加到 Jupyter Notebook 现在，在新的终端，你刚刚打开了朱莉娅，请照做以下： using Pkg Pkg.add(\"IJulia\") 好了！现在打开一个新的 Jupyter 笔记本，你应该看到 Julia 作为一个选项，在你的 Notebook 下拉菜单。 ","date":"2022-01-30","objectID":"/zh-cn/julia_jupyter/:3:0","tags":["Julia","Jupyter Notebook","Python","设置","安装"],"title":"将 Julia 配置到 Jupyter Notebook 中","uri":"/zh-cn/julia_jupyter/"},{"categories":null,"content":" 请点击 这里 查看我的最新简历。如果您对我的网站或其内容有任何想法或任何一般性的想法，请随时与我联系！ May 2020 at Wisconsin State Capitolc.r. Yizhou Lu \" May 2020 at Wisconsin State Capitol ","date":"2021-11-21","objectID":"/zh-cn/about/:0:0","tags":null,"title":"关于我","uri":"/zh-cn/about/"},{"categories":null,"content":"教育 我叫崔雨眠，来自中国。我的代词是她/她/她的。我目前是威斯康辛大学麦迪逊分校的一名大四学生，主修数据科学和经济学（数学）并辅修计算机科学。在上大学之前，我在中国完成了所有的教育。 ","date":"2021-11-21","objectID":"/zh-cn/about/:0:1","tags":null,"title":"关于我","uri":"/zh-cn/about/"},{"categories":null,"content":"兴趣  阅读  辅导  编码  吃  听音乐  和我的猫一起玩 研究兴趣  机器学习  人机交互（HCI）  自然语言处理（NLP） ","date":"2021-11-21","objectID":"/zh-cn/about/:0:2","tags":null,"title":"关于我","uri":"/zh-cn/about/"}]