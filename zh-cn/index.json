[{"categories":["博客"],"content":"使用 Google Colab 和 gspread（用于 Google 表格的 Python API）来更新我的番茄追踪器","date":"2022-01-14","objectID":"/zh-cn/pomodoro/","tags":["“番茄钟”、“Python”、“gspread”、“Colab”、“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["博客"],"content":"在上个学期的时间管理中，我偶然发现了 Francesco Cirillo 开发的 番茄技术。虽然这是我很久以前就听说过的事情，但我还是决定试一试。这一次，我用谷歌工作表作为我的番茄追踪器。 我已经将跟踪器分为 3 个工作表，它们是（1）今天的待办事项，（2）每日日志，和（3）待办事项（见下图）。我会用待办事项来记录我的总体目标，不管是短期目标还是长期目标。然后，在每天开始的时候，我会选择一些我想要关注的任务，并将它们放在今天的待办事项中，在每天结束的时候，我会手动输入今天完成的任务，并将它们组织到每日日志中，这是一张详细的表格，记录了我每天完成任务的内容。 Today's To-Do\u003cimg src=\"Daily-To-Do.png\" width=\"250\"/\u003e \" Today's To-Do Daily Log\u003cimg src=\"Daily-log.png\" width=\"250\"/\u003e \" Daily Log To-Dos\u003cimg src=\"To-Dos.png\" width=\"250\"/\u003e \" To-Dos 在将今天的待办事项中的信息手动转移到日常日志中一段时间后，我厌倦了繁琐的“复制和粘贴”过程。考虑到这可能是一个学习一些新技能的好机会，我使用相对简单的 gspread API 查找了如何阅读和编写谷歌工作表，结果只需运行一个简短的代码就可以节省很多时间。 ","date":"2022-01-14","objectID":"/zh-cn/pomodoro/:0:0","tags":["“番茄钟”、“Python”、“gspread”、“Colab”、“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["博客"],"content":"演示文件（跟上！） 如果你想获得亲身体验，你可以使用演示文件与我一起编码。欢迎你进行调整和改进，以使自己适合自己。 填充 log.ipynb:python 代码 番茄技术 Google Sheets ","date":"2022-01-14","objectID":"/zh-cn/pomodoro/:1:0","tags":["“番茄钟”、“Python”、“gspread”、“Colab”、“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["博客"],"content":"1. 进口 import pandas as pd from google.colab import auth import gspread from oauth2client.client import GoogleCredentials from datetime import date, datetime import pytz import os import json ","date":"2022-01-14","objectID":"/zh-cn/pomodoro/:2:0","tags":["“番茄钟”、“Python”、“gspread”、“Colab”、“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["博客"],"content":"2. 认证和授权 auth.authenticate_user() gc = gspread.authorize(GoogleCredentials.get_application_default()) 第一步是使 Google Sheets API 能够访问你的电子表格。\" 身份验证和授权机制分别用于验证身份和对资源的访问。“你可以了解有关身份验证和授权 here 的更多信息。 但实际上，一旦你运行了这两行代码，一个 URL 就会弹出，并在浏览器中打开一个新的选项卡，该选项卡要求你授予访问权限。之后，复制 URL 并将其粘贴到“验证”框中。 ","date":"2022-01-14","objectID":"/zh-cn/pomodoro/:3:0","tags":["“番茄钟”、“Python”、“gspread”、“Colab”、“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["博客"],"content":"3. 找回你的床单 url = \"https://docs.google.com/spreadsheets/d/1oogWtA5vSlcZTYzYL1CDrv4FIytao2MBBq6UmCKHLK4/edit#gid=0\" wb = gc.open_by_url(url) todosheet = wb.worksheet(\"Today's To-Do\") logsheet = wb.worksheet(\"Daily Log\") 接下来，我们准备好打开我们的电子表格。请记住上面的 gc 变量，它存储了一个你实际上不需要知道的 Client_Class 实例。gc.open_by_url 通过 URL 打开电子表格并返回电子表格实例 wb。通过更改 wb.worksheet(???) 的名称参数，我们可以检索相应的工作表。 ","date":"2022-01-14","objectID":"/zh-cn/pomodoro/:4:0","tags":["“番茄钟”、“Python”、“gspread”、“Colab”、“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["博客"],"content":"4. 操作检索到的工作表数据 在我的例子中，因为我想将单元格数据读入列表（表示行）并将其写到新的工作表中，所以我以我认为合适的方式对其进行了操作。返回的 newList 将用于填充“每日日志”工作表。 data = todosheet.get_all_values() df_todo = pd.DataFrame(data) df_todo.columns = df_todo.iloc[0] df_todo = df_todo.drop(0) df_todo = df_todo.reset_index(drop=True) header = df_todo.columns.tolist() rowsList = df_todo.to_numpy().tolist() ''' return a list of lists to populate the log sheet will only add tasks that have already been done ''' def createPopulateData(rowsList): newList = [] for row in rowsList: rowList = [] task = row[header.index('task')] status = row[header.index('status')] if task == \"\" or status == \"\": break start_time = row[header.index('start time')] stepType = row[header.index('step/type')] pomos = row[header.index('pomodoro(s)')] pomoNum, intDistract, extDistract = 0, 0, 0 for sign in pomos: if sign == \"x\": pomoNum += 1 elif sign == \"-\": extDistract += 1 elif sign == \"'\": intDistract += 1 else: continue if pomoNum == 0: continue tz = pytz.timezone(\"US/Central\") todayDate = datetime.now(tz).strftime(\"%m/%d/%y\") # assumes the author runs the script before local 11:59 pm notes = row[header.index('notes')] rowList.extend([todayDate, start_time, stepType, task, pomoNum, intDistract, extDistract, notes]) newList.append(rowList) return newList newList = createPopulateData(rowsList) ","date":"2022-01-14","objectID":"/zh-cn/pomodoro/:5:0","tags":["“番茄钟”、“Python”、“gspread”、“Colab”、“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["博客"],"content":"5. 简化更新流程 如果我希望重写，因为我已经对我的“今天的工作”表做了一些其他的修改，该怎么办？因为默认情况下 sheet.append_rows（） 函数追加到表的最后一行之后，而我不希望这样，所以在最初运行代码时，我创建了一个 marks.json 文件，该文件记录了范围的起始索引，以及这是否是一个更新操作。如果这是一个更新操作（除了第一次运行代码，其余都被认为是更新），我将切换到使用 sheet.update（），因为它将更新并反映我对 Sheet 所做的新更改。 path = \"/content/marks.json\" if not os.path.exists(path): start = len(logsheet.col_values(1)) + 1 marks = {} marks[\"start\"] = start marks[\"update\"] = False with open(path, \"w\") as f: json.dump(marks, f) else: with open(path) as f1: marks = json.load(f1) marks[\"update\"] = True with open(path, \"w\") as f2: json.dump(marks, f2) with open(path) as f: marks = json.load(f) start, update = marks[\"start\"], marks[\"update\"] ''' do not delete Today's To-Do sheet until satisfied with Daily log editing because starting index of rows range to append is fixed ''' append = len(newList) - 1 end = marks[\"start\"] + append if not update: print(f\"append {len(newList)} rows to Daily Log\") res = logsheet.append_rows(newList, table_range=f\"A{start}:H{end}\") else: print(f\"update {len(newList)} rows to Daily Log\") res = logsheet.update(f\"A{start}:H{end}\", newList) if len(newList) == 0: print(\"no finished task to append or update yet :)\") res 最后，res 对象包括一个自动响应，该响应告诉我们已经添加或更新了什么，以确认我们是否做了正确的事情。 ","date":"2022-01-14","objectID":"/zh-cn/pomodoro/:6:0","tags":["“番茄钟”、“Python”、“gspread”、“Colab”、“谷歌表格”"],"title":"用 Google Sheets API 在两秒钟内填充我的番茄追踪器","uri":"/zh-cn/pomodoro/"},{"categories":["笔记"],"content":"一个博客, 分享我自己构建 Hugo 网站的一些经验","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["笔记"],"content":"1. Requirements install git install hugo ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:1:0","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["笔记"],"content":"2. Get started I would suggest look over official documentations for basic installation and configuration. If you cannot solve problem by then, check out blog posts that might be helpful. ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:2:0","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["笔记"],"content":"docs https://hugoloveit.com/ (site demo) https://gohugo.io/getting-started/quick-start/ https://hugoloveit.com/ (this is the LoveIt theme in Hugo, but format\u0026troubleshoot should generalize to other templates) YouTube tutorial step by step ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:2:1","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["笔记"],"content":"blogs is-there-a-place-we-can-put-non-blog-files-pdf-files-in-blogdown how-to-make-a-mulilingual-website-with-hugo ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:2:2","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["笔记"],"content":"misc Font_Awesome.docset (icons) Common Issues If your page under development mode crashed, be patient and maybe reload the server in terminal with Ctrl-C and hugo server -D Be careful about syntax, format, especially with multilingual setting. If you’re not sure the organization, always refer to the themes/xxx(LoveIt)/exampleSite folder first that’s contained in every Hugo repo after you clone it. When you want to add the featured image for the content preview in the home page, do: resources: - name: \"featured-image\" src: \"featured-image.png\" and name your md file to be index.md. Don’t forget to add the \u003c!--more--\u003e divider if you want to tell Hugo only summarizes the content before divider in preview. ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:2:3","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["笔记"],"content":"3. Publish your page Publishing the page is a bit of hassle for me. My sincere suggestion after this experience is to find a tutorial and closely follow the steps. Even if you don’t like the theme or the tutorial style, it’s always easier to build up your understanding first and level up/optimize from there. I used GitHub to host my website and here is a list of docs/blogs that I referred to: https://hongtaoh.com/en/2021/04/05/hugo-deploy-github-actions/ https://gohugo.io/hosting-and-deployment/hosting-on-github/ https://levelup.gitconnected.com/build-a-personal-website-with-github-pages-and-hugo-6c68592204c7 https://www.pluralsight.com/guides/how-to-host-your-static-webpages-on-github-pages ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:3:0","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["笔记"],"content":"4. Other details ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:4:0","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["笔记"],"content":"comment To set up utterances comment section, I updated both config.toml and installed utterances app to repo. There are other alternatives like Disqus and Valine. ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:4:1","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["笔记"],"content":"gdocs shortcodes Thanks to Ashish Tiwari’s shortcodes post and wowchemy-hugo-modules, I’m able to incorporate the gdocs shortcodes functionality. In particular, be aware in your shortcodes {{\u003cgdocs src=\"???\"\u003e}} , the src url should be the one published to web (in your google slides, go to File and then Publish to the web, select either link or embed and copy the url in src=\"???\"), not the shared url. I corrected this once I found only my laptop web can show gdocs (also the display is not very satisfactory) while ipad and iphone can’t. Specifial thanks to Cecina Babich Morrow’s post. ","date":"2021-11-10","objectID":"/zh-cn/hugo_tutorial/:4:2","tags":["安装","设置","网站"],"title":"Hugo网站搭建经验帖","uri":"/zh-cn/hugo_tutorial/"},{"categories":["博客"],"content":"花一些时间来更新我对“p-value”的理解, 并在此处做个笔记","date":"2020-09-01","objectID":"/zh-cn/stats_pvalue/","tags":["p值","统计","假设检验"],"title":"对假设检验中p值的反思","uri":"/zh-cn/stats_pvalue/"},{"categories":["博客"],"content":"I feel this topic is rather important and worthy to dive into as 3 out of my 4 courses this semester have covered this concept. Yet having learned p-value and hypothesis testing on my AP course early since high school and my college introductory stats course, it always remains a bit foggy. Thus, it would be good to review for learning consolidation and future reference. ","date":"2020-09-01","objectID":"/zh-cn/stats_pvalue/:0:0","tags":["p值","统计","假设检验"],"title":"对假设检验中p值的反思","uri":"/zh-cn/stats_pvalue/"},{"categories":["博客"],"content":"1. What does it actually mean to reject the null? Rejecting null doesn’t mean it’s true, it just means we fail to prove it’s false. $H_{0}$ and $H_{1}$ are not the opposites. It’s not like one way or the other. Assume null is true, there has happend a low probability event. It seems too rare to happen but if it does happen, then it’s reasonable to suspect the validity of the null. ","date":"2020-09-01","objectID":"/zh-cn/stats_pvalue/:1:0","tags":["p值","统计","假设检验"],"title":"对假设检验中p值的反思","uri":"/zh-cn/stats_pvalue/"},{"categories":["博客"],"content":"2. Hypothesis testing According to Wooldrige’s textbook: there’re two approaches. classical: compare critical value with test statistic, if test statistic \u003e critical value, then reject, because we get a sufficiently large value compared to the null. note as $\\alpha$ significance level decreases, the critical value increases, which means it becomes harder to reject the null and one needs larger test statistic for rejection. For example, if I can reject the null at 5 % significance level, I can surely reject it at 10%. p-value: calculate p-value and compare it to sigficance level, if p-value \u003c significance level, reject the null, vice versa. ","date":"2020-09-01","objectID":"/zh-cn/stats_pvalue/:2:0","tags":["p值","统计","假设检验"],"title":"对假设检验中p值的反思","uri":"/zh-cn/stats_pvalue/"},{"categories":["博客"],"content":"3. Additional thoughts Given the observed value of the t statistic, p value is the smallest significance level (alpha) at which the null hypothesis would be rejected. – Cited from Wooldrige To put it in my own understanding, if p-value is 0.03, it means we would observe test statistic as extreme 3% of time when null is true. Smaller p means stronger evidence against $H_{0}$. To compare it with $\\alpha$ the signficance level is to make sure if we were to reject the null 3% of time, it should be within the tolerance of error(the significance level), say if $\\alpha$ is 0.05, we’re willing to accept mistakenly reject the null 5% of time when it is actually true. Why say p-value is the smallest significance level? if we calculate p to be 0.03 and we can reject the null at 3% significance level, we can certainly reject this at 5% if set by the question. ","date":"2020-09-01","objectID":"/zh-cn/stats_pvalue/:3:0","tags":["p值","统计","假设检验"],"title":"对假设检验中p值的反思","uri":"/zh-cn/stats_pvalue/"},{"categories":["projects"],"content":"我在 UW-Madison Data Science Club 主办的 Data Challenge 中的项目概述","date":"2020-11-05","objectID":"/zh-cn/data_challenge_2020/","tags":["机器学习","统计","数据分析","Python"],"title":"心力衰竭死亡预测项目-Data Challenge 2020","uri":"/zh-cn/data_challenge_2020/"},{"categories":["projects"],"content":"1.What I did In Junior Fall 2020, I collaborated with Shaonan Wang, an ISYE major at UW-Madison, on the Data Challenge hosted by Data Science Club. The task was to preprocess the dataset given and develop best prediction statiscal/ML models possible (“best” means highest accuracy) The dataset came from Kaggle.com, about predicting death due to heart failure based on twelve health characteristics on almost 300 patients (diabetes, high blood pressure, etc.). We applied Logistic Regression and Random Forest, with the latter achieving 87% at the end. For model evaluation, we used confusion matrix and ROC curve. Finally, we did an analysis report and presented our findings to professors and other teams. ","date":"2020-11-05","objectID":"/zh-cn/data_challenge_2020/:1:0","tags":["机器学习","统计","数据分析","Python"],"title":"心力衰竭死亡预测项目-Data Challenge 2020","uri":"/zh-cn/data_challenge_2020/"},{"categories":["projects"],"content":"2.Final results deliverables 👉 colab code 👉 analysis report slides ","date":"2020-11-05","objectID":"/zh-cn/data_challenge_2020/:2:0","tags":["机器学习","统计","数据分析","Python"],"title":"心力衰竭死亡预测项目-Data Challenge 2020","uri":"/zh-cn/data_challenge_2020/"},{"categories":["projects"],"content":"2020年夏季EconEx实习, 通过Python编程的独立项目","date":"2020-08-09","objectID":"/zh-cn/covid19_analysis/","tags":["Python","数据分析"],"title":"Covid-19下的纽约：消费者和零售趋势分析","uri":"/zh-cn/covid19_analysis/"},{"categories":["projects"],"content":"1. What I did In Summer 2020, I was fortunate to be selected into the EconEx externship program hosted by Econ department. Mentored by UW-Alumni and Data Scientist Micah Lanier, I completed an independent project analyzing New York City consumer and retail trends under Covid-19. Meanwhile, I self-learnt many useful data analysis techniques in Python, like how to use numpy, pandas, matplotlib … interpolation to fill in missing data and web scraping. ","date":"2020-08-09","objectID":"/zh-cn/covid19_analysis/:1:0","tags":["Python","数据分析"],"title":"Covid-19下的纽约：消费者和零售趋势分析","uri":"/zh-cn/covid19_analysis/"},{"categories":["projects"],"content":"2. Final results For final deliverables, here is the whitepaper and I also made a video presentation: Here is the full code: (I attached it here but they’re also available on github repo) main.py: import pandas as pd import numpy as np from datetime import datetime import matplotlib.pyplot as plt %matplotlib inline df = pd.read_csv(\"us-counties.csv\",parse_dates=True,index_col=0) pd.options.display.max_rows = 10 df = df['20200304':'20200611'] df.reset_index(inplace=True) df t10 = df.groupby('state').sum().sort_values('cases', ascending=False).head(10) t10 = t10.drop(columns='fips') print (t10.index) t10_list = ['New York', 'New Jersey', 'Illinois', 'California', 'Massachusetts', 'Pennsylvania', 'Michigan', 'Texas', 'Florida', 'Louisiana'] t10 t_c = t10['cases'].to_list() t_d = t10['deaths'].to_list() x = np.arange(len(t10.index)) # the label locations width = 0.35 # the width of the bars fig, ax = plt.subplots(figsize=(12,5)) rects1 = ax.bar(x - width/2, t_c, width, label='cases') rects2 = ax.bar(x + width/2, t_d, width, label='deaths') # Add some text for labels, title and custom x-axis tick labels, etc. ax.set_ylabel('number') ax.set_title('Cases and deaths comparison across top 10 states') ax.set_xticks(x) ax.set_xticklabels(t10.index) #ax.set_yticks(y) #ax.set_yticklabels(y) ax.legend() fig.tight_layout() plt.show() # now I have obtained the top 10 states with cases confirmed. Next I want to plot the contrast between # cases and deaths over time for each state. cov19_counties_bystate_cases = pd.Series(df.groupby(['state','date']).cases.sum()) cov19_counties_bystate_deaths = pd.Series(df.groupby(['state','date']).deaths.sum()) cov19_counties_bystate = pd.DataFrame(cov19_counties_bystate_cases) cov19_counties_bystate['deaths'] = cov19_counties_bystate_deaths cov19_counties_bystate_deaths = pd.Series(cov19_counties.groupby(['state','date']).deaths.sum()) cov19_counties_bystate = pd.DataFrame(cov19_counties_bystate_cases) cov19_counties_bystate['deaths'] = cov19_counties_bystate_deaths cov19_counties_bystate from matplotlib.dates import DateFormatter import matplotlib.dates as mdates cov19_counties.date = pd.to_datetime(cov19_counties.date) pp.figure(figsize=(12,12)) for i, state in enumerate(t10.index): pp.subplot(5,2,i+1) #5 rows, 2 columns pp.plot(cov19_counties_bystate.loc[state].cases,label='cases') pp.plot(cov19_counties_bystate.loc[state].deaths,label='deaths') pp.legend() pp.title(state) #pp.xticks(arange(4), calendar.month_name[3:6+1], rotation=45) pp.tight_layout() # drop rows df = cov19_counties_bystate ax = cov19_counties_bystate.loc['New York'].cases.plot.line(figsize=(12,5)) ax = cov19_counties_bystate.loc['New Jersey'].cases.plot.line(figsize=(12,5)) ax = cov19_counties_bystate.loc['Illinois'].cases.plot.line(figsize=(12,5)) #ax = cov19_counties_bystate.loc['California'].cases.plot.line(figsize=(12,5))''' for state in t10.index[:4+1]: ax = cov19_counties_bystate.loc[state].cases.plot.line(figsize=(12,5)) ax.legend(t10.index[:4+1]) pp.title('states cases') for state in t10.index[:4+1]: ax = cov19_counties_bystate.loc[state].deaths.plot.line(figsize=(12,5)) ax.legend(t10.index[:4+1]) pp.title('states deaths') df[df.state == 'New York'] dfc = df[df.state == 'New York'].pivot_table(index = df[df.state == 'New York'].date, values='cases',aggfunc='sum') dfd = df[df.state == 'New York'].pivot_table(index = df[df.state == 'New York'].date, values='deaths',aggfunc='sum') ax = dfc.plot.line(figsize=(12,5),grid=True,rot=True) dfd.plot.line(figsize=(12,5),grid=True,rot=True,ax=ax) ax.set_xlabel(\"New York\") ax.set_ylabel(\"number\") def plotstate(state_name): dfc = df[df.state == state_name].pivot_table(index = df[df.state == state_name].date, values='cases',aggfunc='sum') dfd = df[df.state == state_name].pivot_table(index = df[df.state == state_name].date, values='deaths',aggfunc='sum') ax = dfc.plot.line(figsize=(12,5),grid=True,rot=True) dfd.plot.line(figsize=(12,5),grid=True,rot=True,ax=ax) ax.set_xlabel(state_name) ax.set_","date":"2020-08-09","objectID":"/zh-cn/covid19_analysis/:2:0","tags":["Python","数据分析"],"title":"Covid-19下的纽约：消费者和零售趋势分析","uri":"/zh-cn/covid19_analysis/"},{"categories":null,"content":" 请点击 这里 查看我的最新简历。如果您对我的网站或其内容有任何想法或任何一般性的想法，请随时与我联系！ May 2020 at Wisconsin State Capitolc.r. Yizhou Lu \" May 2020 at Wisconsin State Capitol ","date":"2021-11-21","objectID":"/zh-cn/about/:0:0","tags":null,"title":"关于我","uri":"/zh-cn/about/"},{"categories":null,"content":"教育 我叫崔雨眠，来自中国。我的代词是她/她/她的。我目前是威斯康辛大学麦迪逊分校的一名大四学生，主修数据科学和经济学（数学）并辅修计算机科学。在上大学之前，我在中国完成了所有的教育。 ","date":"2021-11-21","objectID":"/zh-cn/about/:0:1","tags":null,"title":"关于我","uri":"/zh-cn/about/"},{"categories":null,"content":"兴趣  阅读  辅导  编码  吃  听音乐  和我的猫一起玩 研究兴趣  机器学习  人机交互（HCI）  自然语言处理（NLP） ","date":"2021-11-21","objectID":"/zh-cn/about/:0:2","tags":null,"title":"关于我","uri":"/zh-cn/about/"}]